# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

name: $(TeamProject)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger:
- master
- develop

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'c8049365-1be6-4e45-8fbc-1bf5f9937d1c'
  imageRepository: 'angular'
  containerRegistry: 'mcrbattlestar.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  # TODO: Optional replace BuildId with BuildNumber
  # tag: '$(Build.BuildId)'
  tag: '$(Build.BuildNumber)'
  imagePullSecret: 'mcrbattlestara99f-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

# TODO: rename manifests folder -> manifest-master/develop
    - upload: manifests-$(Build.SourceBranchName)
      displayName: 'Upload Manifests'
      artifact: manifests      

- stage: DeployStage
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
# TODO: Goto Enivronment Tab and rename angular -> angular-master/develop
    environment: 'angular-$(Build.SourceBranchName).default'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo '$(mynonsecret)'
            displayName: '*** my non secrect - experiment'
          - script: echo '$(mysecret)'
            displayName: '*** my secrect - experiment'
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

# TODO: Goto Environment Tab and add Approval on Production environment
- stage: DeployProd
  displayName: Deploy Production
  dependsOn: BuildStage

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
# TODO: Goto Enivronment Tab and rename angular -> angular-master/develop
    environment: 'angular-$(Build.SourceBranchName).default'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo '$(mynonsecret)'
            displayName: '*** my non secrect - experiment'
          - script: echo '$(mysecret)'
            displayName: '*** my secrect - experiment'
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

